{{>partial_header}}
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Runtime.Serialization;
using System.Text;

{{#models}}
{{#model}}
namespace {{packageName}}.Model
{ {{#isEnum}}{{>enumClass}}{{/isEnum}}{{^isEnum}}
    /// <summary>
    /// {{description}}
    /// </summary>
    [DataContract]
    public partial class {{classname}} : {{#parent}}{{{parent}}}, {{/parent}}IEquatable<{{classname}}>
    { {{#vars}}{{#items.isEnum}}{{#items}}{{>enumClass}}{{/items}}{{/items.isEnum}}
        /// <summary>
        /// {{^description}}Gets or Sets {{{name}}}{{/description}}{{#description}}{{description}}{{/description}}
        /// </summary>
        {{#description}}
        /// <value>{{description}}</value>
        {{/description}}
        {{#required}}
        [Required]
        {{/required}}
        [DataMember(Name="{{baseName}}")]
        {{#isEnum}}
        public {{{datatypeWithEnum}}}{{#isEnum}}{{^isContainer}}?{{/isContainer}}{{/isEnum}} {{name}} { get; set; }
        {{/isEnum}}
        {{^isEnum}}
        public {{{datatype}}} {{name}} { get; {{#isReadOnly}}private {{/isReadOnly}}set; }
        {{/isEnum}}
        {{#hasMore}}
        {{/hasMore}}
        {{/vars}}

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class {{classname}} {\n");
            {{#vars}}
            sb.Append("  {{name}}: ").Append({{name}}).Append("\n");
            {{/vars}}
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public {{#parent}} new {{/parent}}string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals(({{classname}})obj);
        }

        /// <summary>
        /// Returns true if {{classname}} instances are equal
        /// </summary>
        /// <param name="other">Instance of {{classname}} to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals({{classname}} other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            bool isEqual = {{#vars}}{{#-first}}true{{/-first}}{{/vars}}{{^vars}}false{{/vars}};
{{#vars}}
            isEqual &= {{name}} == other.{{name}} || {{name}} != null && {{name}}.Equals(other.{{name}});
{{/vars}}
            return isEqual;
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            var hashCode = base.GetHashCode();
{{#vars}}{{#-first}}
            unchecked
            {
{{/-first}}
                if ({{name}} != null)
                    hashCode = hashCode * 10 + {{name}}.GetHashCode();{{#-last}}
            }{{/-last}}
{{/vars}}
            return hashCode;
        }

        #pragma warning disable 1591

        public static bool operator ==({{classname}} left, {{classname}} right)
        {
            return Equals(left, right);
        }

        public static bool operator !=({{classname}} left, {{classname}} right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
    }
{{/isEnum}}
{{/model}}
{{/models}}
}
